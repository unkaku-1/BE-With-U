version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: bewithU-postgres
    environment:
      POSTGRES_DB: bewithU
      POSTGRES_USER: bewithU_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-bewithU_secure_2024}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - bewithU-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bewithU_user -d bewithU"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: bewithU-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_secure_2024}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - bewithU-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Ollama Local LLM Service
  ollama:
    image: ollama/ollama:latest
    container_name: bewithU-ollama
    ports:
      - "${OLLAMA_PORT:-11434}:11434"
    volumes:
      - ollama_data:/root/.ollama
      - ./docker/ollama/entrypoint.sh:/entrypoint.sh
    environment:
      - OLLAMA_ORIGINS=*
      - OLLAMA_HOST=0.0.0.0
    networks:
      - bewithU-network
    restart: unless-stopped
    entrypoint: ["/entrypoint.sh"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 120s

  # BEwithU Backend API
  bewithU_api:
    build:
      context: ./bewithU_api
      dockerfile: Dockerfile
    container_name: bewithU-api
    ports:
      - "${API_PORT:-5000}:5000"
    environment:
      - FLASK_ENV=${FLASK_ENV:-production}
      - DATABASE_URL=postgresql://bewithU_user:${POSTGRES_PASSWORD:-bewithU_secure_2024}@postgres:5432/bewithU
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_secure_2024}@redis:6379/0
      - JWT_SECRET_KEY=${JWT_SECRET:-jwt_secret_change_me_2024}
      - OLLAMA_BASE_URL=http://ollama:11434
      - N8N_WEBHOOK_URL=http://n8n:5678
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://localhost:5678}
    volumes:
      - ./bewithU_api:/app
      - api_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      ollama:
        condition: service_healthy
    networks:
      - bewithU-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # n8n Workflow Automation
  n8n:
    image: n8nio/n8n:latest
    container_name: bewithU-n8n
    ports:
      - "${N8N_PORT:-5678}:5678"
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=bewithU_user
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD:-bewithU_secure_2024}
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD:-n8n_admin_2024}
      - WEBHOOK_URL=http://localhost:${N8N_PORT:-5678}/
      - GENERIC_TIMEZONE=Asia/Tokyo
      - N8N_SECURE_COOKIE=false
      - N8N_HOST=0.0.0.0
      - N8N_PROTOCOL=http
      - N8N_LOG_LEVEL=info
      - EXECUTIONS_PROCESS=main
      - EXECUTIONS_DATA_SAVE_ON_ERROR=all
      - EXECUTIONS_DATA_SAVE_ON_SUCCESS=all
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/workflows:/tmp/workflows
      - ./n8n/credentials:/tmp/credentials
    depends_on:
      postgres:
        condition: service_healthy
      bewithU_api:
        condition: service_healthy
    networks:
      - bewithU-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bewithU-frontend
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:${API_PORT:-5000}
      - REACT_APP_N8N_URL=http://localhost:${N8N_PORT:-5678}
      - REACT_APP_APP_NAME=BEwithU
      - REACT_APP_VERSION=${APP_VERSION:-1.0.0}
      - GENERATE_SOURCEMAP=false
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    depends_on:
      bewithU_api:
        condition: service_healthy
    networks:
      - bewithU-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: bewithU-nginx
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      frontend:
        condition: service_healthy
      bewithU_api:
        condition: service_healthy
      n8n:
        condition: service_healthy
    networks:
      - bewithU-network
    restart: unless-stopped
    profiles:
      - production
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  ollama_data:
    driver: local
  n8n_data:
    driver: local
  api_logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  bewithU-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

