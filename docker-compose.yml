version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15
    container_name: bewithU-postgres
    environment:
      POSTGRES_DB: bewithU
      POSTGRES_USER: bewithU_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-bewithU_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - bewithU-network
    restart: unless-stopped

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: bewithU-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bewithU-network
    restart: unless-stopped

  # Ollama本地LLM服务
  ollama:
    image: ollama/ollama:latest
    container_name: bewithU-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
      - ./docker/ollama/entrypoint.sh:/entrypoint.sh
    environment:
      - OLLAMA_ORIGINS=*
    networks:
      - bewithU-network
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  # n8n工作流编排引擎
  n8n:
    image: n8nio/n8n:latest
    container_name: bewithU-n8n
    ports:
      - "5678:5678"
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=bewithU_user
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD:-bewithU_password}
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD:-bewithU123}
      - WEBHOOK_URL=http://localhost:5678/
      - GENERIC_TIMEZONE=Asia/Tokyo
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/workflows:/home/node/.n8n/workflows
      - ./n8n/credentials:/home/node/.n8n/credentials
    depends_on:
      - postgres
      - redis
      - ollama
    networks:
      - bewithU-network
    restart: unless-stopped

  # Outline知识库系统
  outline:
    image: outlinewiki/outline:latest
    container_name: bewithU-outline
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - SECRET_KEY=${OUTLINE_SECRET_KEY:-outline-secret-key-change-me}
      - UTILS_SECRET=${OUTLINE_UTILS_SECRET:-outline-utils-secret-change-me}
      - DATABASE_URL=postgres://bewithU_user:${POSTGRES_PASSWORD:-bewithU_password}@postgres:5432/outline
      - REDIS_URL=redis://redis:6379
      - URL=http://localhost:3001
      - PORT=3000
      - FILE_STORAGE=local
      - FILE_STORAGE_LOCAL_ROOT_DIR=/var/lib/outline/data
      - FILE_STORAGE_UPLOAD_MAX_SIZE=26214400
      - ENABLE_UPDATES=false
      - DEFAULT_LANGUAGE=ja_JP
    volumes:
      - outline_data:/var/lib/outline/data
    depends_on:
      - postgres
      - redis
    networks:
      - bewithU-network
    restart: unless-stopped

  # Zammad工单系统
  zammad-elasticsearch:
    image: bitnami/elasticsearch:8
    container_name: bewithU-zammad-elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/bitnami/elasticsearch/data
    networks:
      - bewithU-network
    restart: unless-stopped

  zammad-init:
    image: zammad/zammad-docker-compose:zammad-postgresql
    container_name: bewithU-zammad-init
    command: ["rails", "r", "Setting.set('es_url', 'http://zammad-elasticsearch:9200')"]
    depends_on:
      - postgres
      - zammad-elasticsearch
    environment:
      - POSTGRESQL_HOST=postgres
      - POSTGRESQL_PORT=5432
      - POSTGRESQL_USER=bewithU_user
      - POSTGRESQL_PASS=${POSTGRES_PASSWORD:-bewithU_password}
      - POSTGRESQL_DB=zammad
      - ELASTICSEARCH_HOST=zammad-elasticsearch
      - ELASTICSEARCH_PORT=9200
    networks:
      - bewithU-network
    restart: "no"

  zammad-web:
    image: zammad/zammad-docker-compose:zammad-postgresql
    container_name: bewithU-zammad-web
    ports:
      - "3002:3000"
    environment:
      - POSTGRESQL_HOST=postgres
      - POSTGRESQL_PORT=5432
      - POSTGRESQL_USER=bewithU_user
      - POSTGRESQL_PASS=${POSTGRES_PASSWORD:-bewithU_password}
      - POSTGRESQL_DB=zammad
      - ELASTICSEARCH_HOST=zammad-elasticsearch
      - ELASTICSEARCH_PORT=9200
      - RAILS_TRUSTED_PROXIES=['127.0.0.1', '::1']
    volumes:
      - zammad_data:/opt/zammad
    depends_on:
      - postgres
      - zammad-elasticsearch
      - zammad-init
    networks:
      - bewithU-network
    restart: unless-stopped

  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bewithU-backend
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://bewithU_user:${POSTGRES_PASSWORD:-bewithU_password}@postgres:5432/bewithU
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-jwt-secret-change-me}
      - OLLAMA_BASE_URL=http://ollama:11434
      - N8N_WEBHOOK_URL=http://n8n:5678
      - OUTLINE_API_URL=http://outline:3000
      - ZAMMAD_API_URL=http://zammad-web:3000
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
      - n8n
      - ollama
    networks:
      - bewithU-network
    restart: unless-stopped

  # 前端应用
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bewithU-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_N8N_URL=http://localhost:5678
      - REACT_APP_OUTLINE_URL=http://localhost:3001
      - REACT_APP_ZAMMAD_URL=http://localhost:3002
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - bewithU-network
    restart: unless-stopped

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: bewithU-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
      - n8n
      - outline
      - zammad-web
    networks:
      - bewithU-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  ollama_data:
  n8n_data:
  outline_data:
  zammad_data:
  elasticsearch_data:

networks:
  bewithU-network:
    driver: bridge

