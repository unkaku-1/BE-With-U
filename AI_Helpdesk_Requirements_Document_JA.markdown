# AIヘルプデスクシステム要件定義書

## 1. はじめに

### 1.1 目的
本要件定義書は、Windows 11サーバー上にAIヘルプデスクシステムを導入するための要件を定義します。このシステムは、ユーザーの問い合わせを理解し、ナレッジベースから情報を検索し、解決策を提供し、自動的にチケットを作成することで、ITサポートプロセスを最適化することを目的としています。さらに、システムは対話とチケット処理プロセスを分析することで、ナレッジベースを自動的に更新および充実させる学習能力を備えています。

### 1.2 範囲
AIヘルプデスクシステムは、以下のコアコンポーネントで構成されます。
- **対話型AIエンジン**：ユーザーとの対話を管理し、意図を理解し、応答を生成します。
- **ナレッジベース管理システム**：IT関連のナレッジ記事、FAQ、トラブルシューティングガイドを保存および管理します。
- **チケット管理システム**：チケットの作成、割り当て、追跡、クローズを処理します。
- **自動知識整理モジュール**：対話とチケットデータを分析し、新しい知識ポイントを特定してナレッジベースに自動的に追加します。
- **ユーザーインターフェース**：ユーザーがAIシステムと対話するためのWebインターフェースまたはチャットアプリケーション統合を提供します。
- **データストレージ**：対話履歴、ユーザーデータ、システム設定を保存します。

システムは、情報セキュリティを優先し、日本語をサポートすることを考慮し、GitHubまたはDocker上のオープンソースプロジェクトに基づいて完全に構築されます。

### 1.3 定義
- **AIヘルプデスク**：ユーザーの問い合わせを処理し、解決策を提供できるインテリジェントなITサポートシステム。
- **ナレッジベース**：記事、FAQ、ガイドを含むIT関連情報を保存するデータベース。
- **チケット**：IT担当者によって処理される必要があるユーザーの問題または要求を記録するエントリ。
- **対話**：ユーザーとAIヘルプデスク間のやり取り。

## 2. 全体概要

### 2.1 製品の視点
AIヘルプデスクシステムは、複数のオープンソースコンポーネントを統合した独立したアプリケーションであり、包括的なITサポートソリューションを提供します。システムはWindows 11サーバーに導入され、ユーザーはWebインターフェースまたはチャットプラットフォームを介してアクセスします。

### 2.2 製品機能
- ユーザーの自然言語クエリを理解し、ナレッジベースから関連情報を検索します。
- 自動的に解決できない問題については、対応するIT担当者にチケットを作成して割り当てます。
- 対話とチケットデータを分析し、ナレッジベースを自動的に更新します。
- ユーザーフレンドリーなインタラクションインターフェースを提供します。
- データセキュリティとプライバシー保護を確保します。

### 2.3 ユーザーカテゴリと特性
- **エンドユーザー**：ITサポートを必要とする従業員または顧客。システムを介して問題を問い合わせたり、障害を報告したりします。
- **IT担当者**：システムが自動的に解決できないチケットを処理し、技術サポートを提供します。
- **管理者**：ナレッジベース、チケットシステム、パフォーマンス監視など、システムの設定を管理します。

### 2.4 実行環境
- **サーバー**：Windows 11
- **データベース**：PostgreSQL
- **Webサーバー**：ApacheまたはIIS（Webアプリケーションのホスティング用）
- **プログラミング言語**：Python（Rasaおよびカスタムモジュール用）、PHP（BookStackおよびosTicket用）

### 2.5 設計と実装の制約
- すべてのコアコンポーネントは、GitHubまたはDocker上のオープンソースプロジェクトを使用する必要があります。
- コア機能には、自己開発コンポーネントを含めることはできません。自動知識整理モジュールは、オープンソースライブラリを使用してカスタム開発できます。
- 情報セキュリティを優先し、すべてのコンポーネントがセキュリティ標準に準拠していることを確認します。
- システムは日本語をサポートする必要があります。

### 2.6 仮定と依存関係
- サーバーは、すべてのコンポーネントを実行するのに十分なリソース（CPU、メモリ、ストレージ）を備えています。
- サーバーには、必要なソフトウェア（Python、PHP、データベースサーバーなど）がインストールされています。
- システムは、依存関係と更新をダウンロードするためにインターネットにアクセスできます。

## 3. システム機能

### 3.1 機能要件

#### 3.1.1 対話型AIエンジン
- ユーザーが自然言語で提示するクエリを理解し、日本語をサポートします。
- 対話フローを管理し、コンテキストを維持します。
- ナレッジベースから関連情報を検索して応答を生成します。
- 解決できない問題については、自動的にチケット管理システムに問題をエスカレートします。
- ユーザーインターフェースと統合し、Webチャットまたはチャットプラットフォームとの対話をサポートします。

#### 3.1.2 ナレッジベース管理システム
- IT関連のナレッジ記事、FAQ、トラブルシューティングガイドを保存および管理します。
- ナレッジベースコンテンツのクエリと更新をサポートするAPIを提供します。
- ユーザー認証とロールベースのアクセス制御をサポートします。
- 日本語コンテンツの保存と検索をサポートします。

#### 3.1.3 チケット管理システム
- チケットの作成、割り当て、追跡、クローズを行います。
- チケットのプログラムによる作成と管理をサポートするAPIを提供します。
- ユーザー認証とロールベースのアクセス制御をサポートします。
- 日本語インターフェースとチケットコンテンツをサポートします。

#### 3.1.4 自動知識整理モジュール
- 対話ログを収集および分析し、頻繁に提示される問題とナレッジベースでカバーされていない問題を特定します。
- 解決済みのチケットを分析し、新しい解決策とトラブルシューティング手順を抽出します。
- 自然言語処理技術（クラスタリング、テキスト要約など）を使用して、非構造化テキストから構造化された知識ポイントを抽出します。
- ナレッジベースAPIを介して、新しい知識ポイントをナレッジベースに自動的に追加します。
- ユーザーフィードバックメカニズムを提供し、ユーザーが不正確または古いナレッジベースコンテンツを報告できるようにします。

#### 3.1.5 ユーザーインターフェース
- ユーザーがAIヘルプデスクと対話できるWebベースのチャットインターフェースを提供します。
- チャットプラットフォームMicrosoft Teamsとの統合をサポートします。
- インターフェースはレスポンシブであり、デスクトップおよびモバイルデバイスをサポートする必要があります。
- 日本語と英語の表示をサポートします。

#### 3.1.6 データストレージ
- ユーザーのクエリ、AIの応答、タイムスタンプを含む対話履歴を保存します。
- ユーザーデータ（ユーザープロファイルなど）とシステム設定を保存します。
- データセキュリティを確保し、暗号化とアクセス制御を実装します。

### 3.2 非機能要件

#### 3.2.1 パフォーマンス
- ユーザーのクエリに対するシステムの応答時間は2秒以内である必要があります。
- システムは最大100人の同時ユーザーをサポートする必要があります。

#### 3.2.2 セキュリティ
- すべての通信はHTTPSプロトコルを使用します。
- 安全な認証方法（OAuth、JWTなど）を使用します。
- 保存されたパスワードと機密データは暗号化する必要があります。
- セキュリティ脆弱性を修正するために、すべてのソフトウェアコンポーネントを定期的に更新します。
- 定期的なセキュリティ監査と侵入テストを実施します。

#### 3.2.3 信頼性
- システムの可用性は99.9%に達する必要があります。
- データ損失を防ぐために、バックアップと復元手順を実装します。

#### 3.2.4 可用性
- ユーザーインターフェースは直感的で使いやすいものである必要があります。
- ユーザーと管理者のためのドキュメントとヘルプリソースを提供します。

## 4. 外部インターフェース要件

### 4.1 ユーザーインターフェース
- Rasa Webchatを使用してWebベースのチャットインターフェースを提供します。
- Microsoft Teamsに統合します。
- ナレッジベースとチケットシステムの管理インターフェースを提供します。

### 4.2 ハードウェアインターフェース
- 特定のハードウェアインターフェース要件はありません。システムは純粋なソフトウェアソリューションです。

### 4.3 ソフトウェアインターフェース
| コンポーネント | ソフトウェア | 説明 |
|------|------|------|
| 対話型AIエンジン | Rasa | オープンソースの対話型AIフレームワーク。ユーザーとの対話処理と応答生成に使用。 |
| ナレッジベース管理システム | BookStack | オープンソースのナレッジベースプラットフォーム。IT知識の保存と管理のためのAPIを提供。 |
| チケット管理システム | osTicket | オープンソースのチケットシステム。チケットの作成と管理をサポート。 |
| データストレージ | PostgreSQL | オープンソースのリレーショナルデータベース。対話履歴と設定を保存。 |
| 自動知識整理モジュール | spaCy, scikit-learn, sentence-transformers | オープンソースのPythonライブラリ。NLPと知識抽出に使用。 |

### 4.4 通信インターフェース
- HTTP/HTTPS：API通信用。
- WebSocket：リアルタイムチャット用（必要な場合）。

## 5. その他の非機能要件

### 5.1 パフォーマンス要件
- 3.2.1節を参照。

### 5.2 セキュリティ要件
- 管理者とIT担当者の権限を区別するロールベースのアクセス制御を実装します。
- すべてのWebインターフェースとAPIをHTTPSで保護します。
- 保存されたパスワードと機密データを暗号化します。
- セキュリティを確保するために、ソフトウェアコンポーネントを定期的に更新します。
- セキュリティ監査と侵入テストを実施します。

### 5.3 ソフトウェア品質属性
- **保守性**：システムは保守および更新が容易である必要があります。
- **拡張性**：システムはユーザーとデータの増加に合わせて拡張できる必要があります。
- **相互運用性**：システムは他のITシステムとシームレスに統合できる必要があります。

## 6. 付録

### 6.1 選択されたオープンソースプロジェクト
| プロジェクト | 説明 | GitHubリンク |
|------|------|------------|
| Rasa | 対話型AIエンジン | [https://github.com/RasaHQ/rasa](https://github.com/RasaHQ/rasa) |
| BookStack | ナレッジベース管理システム | [https://github.com/BookStackApp/BookStack](https://github.com/BookStackApp/BookStack) |
| osTicket | チケット管理システム | [https://github.com/osTicket/osTicket](https://github.com/osTicket/osTicket) |
| Rasa Webchat | ユーザーインターフェース | [https://github.com/botfront/rasa-webchat](https://github.com/botfront/rasa-webchat) |
| PostgreSQL | データストレージ | [https://www.postgresql.org/](https://www.postgresql.org/) |
| spaCy | NLPライブラリ | [https://spacy.io/](https://spacy.io/) |
| scikit-learn | 機械学習ライブラリ | [https://scikit-learn.org/](https://scikit-learn.org/) |
| sentence-transformers | 意味的類似性ライブラリ | [https://www.sbert.net/](https://www.sbert.net/) |

### 6.2 セキュリティのベストプラクティス
- **Rasa**：WebhookをHTTPSで保護し、安全なアクションサーバー設定を使用します。
- **BookStack**：安全なユーザー認証とアクセス制御を設定します。
- **osTicket**：安全なAPIキー認証を有効にします。
- **PostgreSQL**：データベースユーザー権限を設定し、SSL接続を有効にします。
- **自動知識整理モジュール**：データ処理がプライバシー規制に準拠していることを確認します。





#### 3.1.7 コンテンツアクセスセキュリティ
- ナレッジベース内の一部のコンテンツは、IT部門によって機密情報としてマークされる場合があります。
- 権限のないユーザーが質問した場合、AIが応答に機密情報が含まれる可能性があると判断した場合、結果を返さずに特定の応答（例：「お問い合わせには機密情報が含まれているため、お答えできません。」）を返します。


